name: Release

on:
  workflow_call:
    inputs:
    # Removed commit-id input, always releases from develop
      type:
        description: 'The type of release (e.g., patch, minor, major)'
        required: false
        type: string
        default: 'patch'
    secrets:
        GH_ACTION_PAT:
            description: 'GitHub Personal Access Token with repo permissions'
            required: true

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout develop branch
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  
          token: ${{ secrets.GH_ACTION_PAT }}
          ref: develop
            
      - name: Validate release type
        run: |
          if [[ "${{ inputs.type }}" != "patch" && "${{ inputs.type }}" != "minor" && "${{ inputs.type }}" != "major" ]]; then
            echo "Invalid release type: ${{ inputs.type }}. Must be one of: patch, minor, major."
            exit 1
          fi
      - name: Ensure branch is develop
        run: |
          if [[ "${GITHUB_REF##*/}" != "develop" ]]; then
            echo "This workflow can only be run from the develop branch."
            exit 1
          fi

      - name: Set git user
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "github-actions@github.com"

      - name: Bump version (release)
        id: version
        run: |
          RELEASE_VERSION=$(npm version ${{ inputs.type }} --no-git-tag-version)
          RELEASE_VERSION=$(grep '"version":' package.json | sed -E 's/.*"([0-9]+\.[0-9]+\.[0-9]+(-SNAPSHOT)?)".*/\1/')
          echo "release_version=$RELEASE_VERSION" >> $GITHUB_OUTPUT

      - name: Commit and push release version to develop
        run: |
          git add package.json package-lock.json || true
          git commit -m "chore(release): v${{ steps.version.outputs.release_version }}"
          git push origin develop

      - name: Merge release to main
        run: |
          git fetch origin main
          git checkout main
          git merge -v origin/develop
          git push origin main

      - name: Tag and create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ steps.version.outputs.release_version }}
          name: v${{ steps.version.outputs.release_version }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Switch back to develop and set snapshot version
        run: |
          git checkout develop
          CURRENT=${{ steps.version.outputs.release_version }}
          NEXT=$(echo $CURRENT | awk -F. '{printf "%d.%d.%d-SNAPSHOT", $1, $2+1, $3}')
          npm version $NEXT --no-git-tag-version
          git add package.json package-lock.json || true
          git commit -m "chore(release-candidate): v$NEXT"
          git push origin develop
             